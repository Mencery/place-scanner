[versions]
spring = "3.0.6"
mongodb = "3.1.0"
spring-security = "6.1.0"
junit = "5.9.1"

[libraries]
#implimentation
spring-boot-gradle-plugin = { module = 'org.springframework.boot:spring-boot-gradle-plugin', version.ref = "spring" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring" }

spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring" }

spring-cloud-starter-openfeign = "org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3"

spring-security-oauth2 = "org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE"
spring-boot-starter-oauth2-client = "org.springframework.boot:spring-boot-starter-oauth2-client:2.3.3.RELEASE"
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security" }
spring-security-oauth2-client = { module = "org.springframework.security:spring-security-oauth2-client", version.ref = "spring-security" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose", version.ref = "spring-security" }
google-api-client = "com.google.api-client:google-api-client:2.1.3"

spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "mongodb" }
mongock-spring = "com.github.cloudyrock.mongock:mongock-spring-v5:4.3.8"
mongodb-springdata-v3-driver = "com.github.cloudyrock.mongock:mongodb-springdata-v3-driver:4.3.8"

lombok = "org.projectlombok:lombok:1.18.28"

commons-math = "org.apache.commons:commons-math3:3.6.1"

httpcomponents-httpclient = "org.apache.httpcomponents:httpclient:4.5.14"

#testImplimintation
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

kafka-testcontainers = "org.testcontainers:kafka:1.18.1"
kafka-spring-test = { module = "org.springframework.kafka:spring-kafka-test", version.ref = "spring" }


[bundles]
spring-core-dependencies = ["spring-boot-gradle-plugin", "spring-boot-starter-actuator", "spring-boot-starter-web", "spring-boot-autoconfigure"]
spring-security-dependencies = ["spring-security-oauth2", "spring-boot-starter-oauth2-client", "spring-security-core", "spring-security-oauth2-client", "spring-security-oauth2-jose", "google-api-client"]
mongock-dependencies = ["mongock-spring", "mongodb-springdata-v3-driver"]
test-core-dependencies = ["spring-boot-starter-test", "junit-jupiter"]
test-kafka-dependencies = ["kafka-testcontainers", "kafka-spring-test"]


[plugins]
dependency-management = {id = "io.spring.dependency-management", version = "1.1.0"}
springframework = {id = "org.springframework.boot", version.ref = "spring"}